<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- 색상 리소스 -->
    <SolidColorBrush x:Key="BackgroundColor" Color="#80EEEEEE"/>
    <SolidColorBrush x:Key="ForegroundColor" Color="Black"/>
    <SolidColorBrush x:Key="ButtonBackgroundColor" Color="#80EEEEEE"/>
    <SolidColorBrush x:Key="ButtonForegroundColor" Color="#333333"/>
    <SolidColorBrush x:Key="PrimaryColor" Color="#1A6FE0"/>
    <SolidColorBrush x:Key="SecondaryForegroundColor" Color="#666666"/>
    <SolidColorBrush x:Key="SideButtonBackgroundColor" Color="#E9ECEF"/>
    <SolidColorBrush x:Key="SideButtonForegroundColor" Color="#1A6FE0"/>
    <SolidColorBrush x:Key="DataGridBackgroundColor" Color="#F5F5F5"/>
    <SolidColorBrush x:Key="DataGridForegroundColor" Color="Black"/>
    <SolidColorBrush x:Key="DataGridRowBackgroundColor" Color="#F5F5F5"/>
    <SolidColorBrush x:Key="DataGridAlternatingRowBackgroundColor" Color="#E0E0E0"/>
    <SolidColorBrush x:Key="ButtonHoverBackgroundColor" Color="#EEEEEE"/>
    <SolidColorBrush x:Key="ButtonHoverForegroundColor" Color="Black"/>
    <SolidColorBrush x:Key="BorderBrushColor" Color="Black"/>
    <SolidColorBrush x:Key="CheckedColor" Color="Black"/>
    <SolidColorBrush x:Key="HelpMarkColor" Color="Black"/>
    <ImageBrush x:Key="TextureBackground" 
                ImageSource="/IconTexture/texture10.png"
                Stretch="UniformToFill"
                Opacity="0.85"/>

    <ImageBrush x:Key="BorderBackground"
            ImageSource="/IconTexture/texture2.png"
            Stretch="UniformToFill"
            Opacity="1"/>

    <!-- 메인 버튼 스타일 -->
    <Style x:Key="MainButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#C2C2C2"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="12">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource ButtonHoverBackgroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 네비게이션 아이콘 버튼 스타일 -->
    <Style x:Key="NavIconButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="NavBorder" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="NavBorder" Property="Background" Value="{DynamicResource ButtonHoverBackgroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 사이드바 버튼 스타일 -->
    <Style x:Key="SidebarButtonStyle" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource SideButtonBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource SideButtonForegroundColor}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="Height" Value="70"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="8">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10">
                            <TextBlock Text="{Binding Tag, RelativeSource={RelativeSource AncestorType=ToggleButton}}"
                                       FontFamily="Segoe MDL2 Assets"
                                       FontSize="20"
                                       Foreground="{TemplateBinding Foreground}"                             
                                       Margin="0,0,10,0"/>
                            
                            <TextBlock Text="{TemplateBinding Content}"                                      
                                       FontWeight="SemiBold"                                      
                                       Foreground="Black"
                                       VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FFB7B8BB"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#1A6FE0"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="#FFA0BEF0"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#1A6FE0"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 검사 / 내역 버튼 스타일 -->
    <Style x:Key="CheckButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="#1A6FE0"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF0742C3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 모드 버튼 스타일 -->
    <Style x:Key="ModeButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonHoverBackgroundColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource ButtonHoverForegroundColor}"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="15" ShadowDepth="0" Color="#CCCCCC"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 라디오 버튼 스타일 -->
    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <Style x:Key="CustomRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <StackPanel Orientation="Horizontal" Cursor="Hand">
                        <!-- 바깥 원 -->
                        <Grid Width="24" Height="24" Margin="0,0,8,0">
                            <Ellipse Stroke="Black" StrokeThickness="2" Fill="Transparent"/>
                            <!-- 가운데 점 -->
                            <Ellipse Width="12" Height="12" Fill="Black"
                                     Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                     HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>

                        <!-- 텍스트 -->
                        <ContentPresenter VerticalAlignment="Center"
                                          RecognizesAccessKey="True"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>