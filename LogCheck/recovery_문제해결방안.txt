최종 복구 완료 메시지 로직 수정: ✅
Recovery.xaml.cs 파일의 StartDiagnosticWizard_Click 메서드에서 모든 개별 복구 작업(Defender, Firewall, Security Center, BitLocker)이 완료된 후, 
각 작업의 상태(예: DefenderStatus.Text, SecurityCenterStatus.Text 등)를 확인합니다.
모든 작업의 상태가 "완료"인 경우에만 "정밀 보안 진단 및 복구가 성공적으로 완료되었습니다."와 같은 성공 메시지를 표시합니다.
하나라도 "오류 발생" 상태인 경우, "정밀 보안 진단 및 복구 과정에서 오류가 발생했습니다. 상세 결과 보고서를 확인하십시오." 와 같은 메시지를 표시하여 
사용자에게 전체 성공이 아님을 알리고 상세 보고서를 확인하도록 안내합니다.

Windows 보안 센터 서비스 재시작 실패 시 재시도 로직 추가: ✅
Recovery.xaml.cs 파일의 RecoverSecurityCenter 메서드 내에서 Restart-Service wscsvc -Force PowerShell 명령을 실행할 때, 
명령이 실패하는 경우(RunPowerShellCommand가 false를 반환하고 오류 출력이 CouldNotStopService와 관련 있는 경우) 
일정 시간 대기 후 몇 차례 자동으로 재시도하도록 로직을 추가합니다.
재시도 후에도 실패하는 경우에만 최종적으로 "오류 발생"으로 처리하고 상세 오류 메시지를 기록합니다.

오류 메시지 처리 개선: ✅
RunPowerShellCommand 메서드에서 발생한 PowerShell 스크립트 오류나 예외 정보를 더 상세하게 캡처하여 
defenderRecoveryError, firewallRecoveryError 등의 변수에 저장하도록 개선합니다. 
현재는 "스크립트 실행 실패"와 같이 일반적인 메시지만 저장될 수 있습니다. 
PowerShell의 StandardError 출력을 해당 변수에 저장하면 상세 오류 원인 파악에 도움이 됩니다.
이러한 단계를 통해 복구 과정의 정확성을 높이고 사용자에게 더 명확한 피드백을 제공할 수 있습니다. 
첫 번째 단계부터 시작하여 최종 메시지 로직을 수정하는 것이 가장 시급합니다.

=====================================

2025-06-08 수정사항: ✅

1. Firewall 활성화 개선
2. Security Center 활성화 개선
3. 오류 메시지 개선
4. 코드 안정성 개선

=====================================

RunPowerShellCommand 메서드 개선 사항 (2025-06-08): ✅

1. 오류 처리 강화
2. 재시도 로직 개선
3. 타임아웃 처리
4. 사용자 피드백 강화
5. 코드 품질 개선

=====================================

현재 코드 반영 상태 (2025-06-08):

1. 최종 복구 완료 메시지 로직 ✅
   - UpdateResultReport 메서드 구현 완료
   - StartDiagnosticWizard_Click 메서드 수정 완료
   - 각 복구 메서드 bool 반환 수정 완료

2. RunPowerShellCommand 메서드 개선 ✅
   - 오류 처리 강화
   - 재시도 로직 구현
   - 타임아웃 처리
   - 스레드 안전성 개선
   - 리소스 관리 개선

3. 보안 센터 서비스 재시도 로직 ✅
   - RunPowerShellCommand의 재시도 로직 활용
   - RecoverSecurityCenter 메서드 재시도 로직 구현

4. 오류 메시지 처리 ✅
   - 상세한 오류 메시지 처리
   - 오류 유형별 구분 처리
   - 사용자 친화적인 메시지 제공

5. 대체 구현 방법 ✅
   - WMI와 ServiceController 사용 구현
   - WmiHelper 클래스 구현

=====================================

향후 작업 목록:

1. 통합 테스트 및 예외 시나리오 검증 (우선순위: 높음)
   - 네트워크 불안정 상황 테스트
   - 권한 부족 시나리오 테스트
   - 긴 실행 시간 명령어 타임아웃 테스트

2. 사용자 피드백 개선 (우선순위: 중간)
   - 직관적인 진행 상황 표시
   - 복구 완료 후 상세 보고서 생성
   - 오류 발생 시 자가 진단 가이드 제공

3. 문서화 업데이트 (우선순위: 낮음)
   - 새 기능 및 변경 사항 반영
   - 개발자 가이드 업데이트
   - 사용자 매뉴얼 개정

=====================================

[Windows 보안 센터 복구 실패 문제 해결]

서비스 상태 문제
   - SecurityHealthService가 실행되지 않거나 시작에 실패할 수 있습니다.
   - 서비스가 손상되었거나 다른 프로그램에 의해 차단되었을 수 있습니다.
   - 해결방법:
     * Windows 키 + R을 눌러 "services.msc" 실행
     * "Security Health Service" 찾기
     * 서비스가 중지되어 있다면 수동으로 시작

레지스트리 접근 문제
   - 레지스트리 키에 대한 접근 권한이 없거나
   - 레지스트리 값이 손상되었을 수 있습니다.
   - 해결방법:
     * 시스템 파일 검사 실행
     * 관리자 권한으로 명령 프롬프트를 열고 다음 명령어 실행:
       sfc /scannow
       DISM /Online /Cleanup-Image /RestoreHealth

WMI 서비스 문제
   - WMI 서비스가 응답하지 않거나
   - SecurityCenter2 네임스페이스에 접근할 수 없는 경우
   - 해결방법:
     * Windows 보안 센터 재설정
     * Windows 설정 > Windows 보안 > 보안 센터 열기
     * 문제 해결 옵션에서 "보안 센터 재설정" 선택

추가 조치사항
   - Windows 보안 센터의 로그를 확인하여 더 자세한 오류 원인 파악
   - 시스템 복원 지점이 있다면 복원 시도
   - Windows 업데이트를 최신 상태로 유지

[복구 프로세스 개선 작업 - 2024년 6월 9일 오전 4:04]

1. 문제 상황
- 복구 실행 시 Firewall 활성화 실패 팝업과 함께 복구 과정이 종료되는 문제 발생
- 진행 상태가 제대로 표시되지 않는 문제
- 오류 발생 시 전체 프로세스가 중단되는 문제

2. 개선 사항
2.1 공통 개선사항
- 각 단계별 세부적인 진행 상태 표시 추가
- 서비스 상태 확인 및 시작 과정 추가
- 정책 복구 단계 세분화
- 최종 상태 확인 단계 추가
- 오류 발생 시 상위로 전파하지 않고 계속 진행하도록 수정

2.2 Windows Defender 개선
- 실시간 보호, IOAV 보호, 행동 모니터링을 개별적으로 활성화
- 서비스 상태 확인 및 시작 과정 추가
- 정책 복구 단계 세분화 (70%, 80%, 90% 진행률)
- 최종 상태 확인 추가

2.3 Windows Firewall 개선
- 도메인, 개인, 공용 프로필을 개별적으로 활성화
- 각 프로필별 진행 상태 표시 (70%, 80%, 90% 진행률)
- 서비스 상태 확인 및 시작 과정 추가
- 최종 상태 확인 추가

2.4 Windows Security Center 개선
- 서비스 재시작, 정책 설정, 알림 설정 단계 추가
- 레지스트리 설정을 통한 정책 복구
- 서비스 상태 확인 및 시작 과정 추가
- 최종 상태 확인 추가

2.5 BitLocker 개선
- TPM 확인 단계 추가
- 하드웨어 테스트 건너뛰기 옵션 추가
- 복구 비밀번호 보호기 추가
- 서비스 상태 확인 및 시작 과정 추가
- 최종 상태 확인 추가

3. 오류 처리 개선
- 각 단계별 구체적인 오류 메시지 표시
- 사용자 친화적인 오류 메시지 추가
- 한 서비스의 실패가 다른 서비스의 복구에 영향을 주지 않도록 수정
- 오류 발생 시에도 전체 프로세스가 계속 진행되도록 수정

4. 진행 상태 표시 개선
- 각 단계별 상세한 상태 메시지 추가
- 진행률 표시 개선 (0% ~ 100%)
- 색상으로 상태 표시 (정상: 녹색, 오류: 빨간색)
- 최종 결과 보고서 개선

5. PowerShell 명령 개선
- 각 서비스별 적절한 PowerShell 명령 사용
- 명령 실행 결과 확인 및 오류 처리
- 사용자 친화적인 메시지로 변환하여 표시

6. 기대 효과
- 복구 프로세스의 안정성 향상
- 사용자에게 더 자세한 진행 상황 제공
- 오류 발생 시에도 전체 프로세스 계속 진행
- 각 단계별 문제 발생 시 정확한 원인 파악 가능
- 사용자 친화적인 인터페이스 제공

=====================================

[2024-06-09 오전 5:10] PowerShell 한글 깨짐 현상 추가 해결법

- 현상: PowerShell 오류 메시지 및 출력에서 한글이 깨지는 현상 지속
- 추가 해결방법:
  1. PowerShell 7(pwsh.exe)을 사용하여 명령 실행
  2. 명령어 맨 앞에 chcp 65001; [Console]::OutputEncoding = [System.Text.Encoding]::UTF8; 두 줄을 모두 추가
  3. ProcessStartInfo의 StandardOutputEncoding, StandardErrorEncoding을 Encoding.UTF8로 설정
- 기대효과: PowerShell 출력 및 오류 메시지의 한글이 정상적으로 표시됨
